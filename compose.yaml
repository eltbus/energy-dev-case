version: "3.8"

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${postgres_username}
      POSTGRES_PASSWORD: ${postgres_password}
      POSTGRES_DB: ${postgres_dbname}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${postgres_username}", "-U", "${postgres_username}"]
      timeout: 30s
      interval: 10s
      retries: 3
    networks:
      - my_network
    expose:
      - "5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  api:
    image: myapi
    environment:
      POSTGRES_USER: ${postgres_username}
      POSTGRES_PASSWORD: ${postgres_password}
      POSTGRES_DB: ${postgres_dbname}
      POSTGRES_HOST: postgres
    expose:
      - "8000"
    networks:
      - my_network
    depends_on:
      - postgres

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    networks:
      - my_network
    depends_on:
      - api

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./data/prometheus:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - api
    networks:
      - my_network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - my_network
    environment:
      GF_SECURITY_ADMIN_USER: ${grafana_username}
      GF_SECURITY_ADMIN_PASSWORD: ${grafana_password}
    volumes:
      - ./data/grafana:/var/lib/grafana
    depends_on:
      - prometheus

networks:
  my_network:
    driver: bridge
